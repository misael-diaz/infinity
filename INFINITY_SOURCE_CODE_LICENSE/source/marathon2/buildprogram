### BUILDPROGRAM### Monday, March 28, 1994 3:09:50 PM# Sunday, April 10, 1994 2:37:03 PM#   generalized# Friday, July 1, 1994 3:02:32 PM#   ajr--made changes so Obj68k and ObjPPC are always defined.#   this was done so that the socket_listener can always be compiled properly.#   (Technically, ObjPPC doesn't always need to be defined, but maybe we'll want it some day...)#Saturday, September 17, 1994 12:09:42 PM  (Jason')#	alpha no longer defines DEBUG so we get a clearer idea of how the final version will#	behaveSet Exit 1#	Find the program parameter.UnSet programFor i In {"Parameters"}	If "{i}" !~ /-Å/		Set program "{i}"		Break	EndEndIf "{program}" == ""	Echo "### {0} - Specify a program to build." > Dev:StdErr	Echo "# Usage - {0} program [optionsÉ]" > Dev:StdErr	Exit 1Endif "{program}" == "shapes"Set RawShapeFiles "`files :graphics:Å.raw`"Export RawShapeFileselse if "{program}" == "shapes.16"Set RawShapeFiles16 "`files :graphics.16:Å.raw`"Export RawShapeFiles16else if "{program}" == "demos"Set DemoFiles "`files :demos:Å.demo`"Export DemoFileselse if "{program}" == "texts"Set TextFiles "`files :texts:LÅ`"Export TextFileselseSet Application "marathon2"#set defaults so make doesn't chuck (looking for Targ68k if we build DemoTarg68k for example)Set CSeriesLibraries68k ""Set CSeriesLibrariesPPC ""Set Targ68k "{Application}"Set DemoTarg68k "{Application}.demo"Set TargPPC "{Application}.ppc"Set DemoTargPPC "{Application}.ppc.demo"Set SprocketSupport "-d SPROCKETS -d SUPPORT_INPUT_SPROCKET"Set SprocketLibraries ""#options for 68k full versionsif "{program}" == "{Application}.alpha" || "{program}" == "{Application}.alpha.ppc" || "{program}" == "{Application}.alpha.fat"	Set Obj68k ":objects:game:68k:alpha:"	Set VerRezOptions "-d DEBUG"	Set VersionAsmOptions "-d DEBUG=1"	Set VersionCOptions "-mbg on -d GAME -d ALPHA -d PERFORMANCE -d COMPILE_TIME=`Date -n`"	Set Targ68k "{Application}.alpha"	Set Link68kOptions "-l"	Set CSeriesLibraries68k "¶"{CSeriesLibraries}¶"cseries.debug.lib {Libraries}PerformLib.o"else if "{program}" == "{Application}.beta" || "{program}" == "{Application}.beta.ppc" || "{program}" == "{Application}.beta.fat"	Set Obj68k ":objects:game:68k:beta:"	Set VerRezOptions "-d DEBUG"	Set VersionAsmOptions "-d DEBUG=1"	Set VersionCOptions "-d DEBUG -mbg on -d GAME -d BETA -d COMPILE_TIME=`Date -n`"	Set Targ68k "{Application}.beta"	Set CSeriesLibraries68k "¶"{CSeriesLibraries}¶"cseries.debug.lib"	Set Link68kOptions ""else if "{program}" == "{Application}.gamma" || "{program}" == "{Application}.gamma.ppc" || "{program}" == "{Application}.gamma.fat"	Set Obj68k ":objects:game:68k:gamma:"	Set VerRezOptions ""	Set VersionAsmOptions "-d DEBUG=1"	Set VersionCOptions "-d DEBUG -mbg off -d GAME -d GAMMA -d COMPILE_TIME=`Date -n`"	Set Targ68k "{Application}.gamma"	Set CSeriesLibraries68k "{CSeriesLibraries}cseries.debug.lib"	Set Link68kOptions ""else if "{program}" == "{Application}" || "{program}" == "{Application}.ppc" || "{program}" == "{Application}.fat" || "{program}" == "{Application}.spr.fat"	Set Obj68k ":objects:game:68k:final:"	Set VerRezOptions ""	Set VersionAsmOptions "-d DEBUG=0"	Set VersionCOptions "-mbg off -d GAME -d FINAL -d TRILOGY"	Set Targ68k "{Application}"	Set CSeriesLibraries68k "¶"{CSeriesLibraries}¶"cseries.lib"	Set Link68kOptions ""#options for 68k demo versionselse if "{program}" == "{Application}.demo.alpha" || "{program}" == "{Application}.demo.alpha.ppc" || "{program}" == "{Application}.demo.alpha.fat"	Set Obj68k ":objects:demo:68k:alpha:"	Set VerRezOptions "-d DEBUG -d DEMO"	Set VersionAsmOptions "-d DEBUG=1"	Set VersionCOptions "-d DEBUG -mbg on -d DEMO -d ALPHA -d DEBUG -d COMPILE_TIME=`Date -n`"	Set DemoTarg68k "{Application}.demo.alpha"	Set CSeriesLibraries68k "¶"{CSeriesLibraries}¶"cseries.debug.lib"else if "{program}" == "{Application}.demo.beta" || "{program}" == "{Application}.demo.beta.ppc" || "{program}" == "{Application}.demo.beta.fat"	Set Obj68k ":objects:demo:68k:beta:"	Set VerRezOptions "-d DEBUG -d DEMO"	Set VersionAsmOptions "-d DEBUG=1"	Set VersionCOptions "-d DEBUG -mbg on -d DEMO -d BETA -d COMPILE_TIME=`Date -n`"	Set DemoTarg68k "{Application}.demo.beta"	Set CSeriesLibraries68k "¶"{CSeriesLibraries}¶"cseries.debug.lib"else if "{program}" == "{Application}.demo" || "{program}" == "{Application}.demo.ppc" || "{program}" == "{Application}.demo.fat" || "{program}" == "{Application}.demo.spr.fat"	Set Obj68k ":objects:demo:68k:final:"	Set VerRezOptions "-d DEMO"	Set VersionAsmOptions "-d DEBUG=0"	Set VersionCOptions "-mbg off -d DEMO -d GAME -d FINAL"	Set DemoTarg68k "{Application}.demo"	Set CSeriesLibraries68k "¶"{CSeriesLibraries}¶"cseries.lib"else	#we must be doing a PowerPC build; set some defaults so Make won't crap looking for 68k variables	Set No68k 1	Set Obj68k ":"end#options for PowerPC full versionsif "{program}" == "{Application}.alpha.ppc" || "{program}" == "{Application}.alpha" || "{program}" == "{Application}.alpha.fat"	Set ObjPPC ":objects:game:ppc:alpha:"		Set VerRezOptions "-d DEBUG"	Set SymbolsPPC "-sym on"	Set VersionPPCCOptions "-opt off -traceback {SymbolsPPC} -d GAME -d ALPHA -d DEBUG -d COMPILE_TIME=`Date -n`"	Set TargPPC "{Application}.alpha.ppc"	Set CSeriesLibrariesPPC "¶"{CSeriesLibraries}¶"cseries.sym.xcoff"else if "{program}" == "{Application}.beta.ppc" || "{program}" == "{Application}.beta" || "{program}" == "{Application}.beta.fat"	Set ObjPPC ":objects:game:ppc:beta:"		Set VerRezOptions ""	Set SymbolsPPC "-sym off"	Set VersionPPCCOptions "-opt speed,unroll,unswitch -traceback {SymbolsPPC} -d GAME -d DEBUG -d BETA -d COMPILE_TIME=`Date -n`"	Set TargPPC "{Application}.beta.ppc"	Set CSeriesLibrariesPPC "¶"{CSeriesLibraries}¶"cseries.debug.xcoff"else if "{program}" == "{Application}.gamma.ppc" || "{program}" == "{Application}.gamma" || "{program}" == "{Application}.gamma.fat"	Set ObjPPC ":objects:game:ppc:gamma:"		Set VerRezOptions ""	Set SymbolsPPC "-sym off"	Set VersionPPCCOptions "-opt speed,unroll,unswitch {SymbolsPPC} -d GAME -d DEBUG -d GAMMA -d COMPILE_TIME=`Date -n`"	Set TargPPC "{Application}.gamma.ppc"	Set CSeriesLibrariesPPC "¶"{CSeriesLibraries}¶"cseries.debug.xcoff"else if "{program}" == "{Application}.ppc" || "{program}" == "{Application}" || "{program}" == "{Application}.fat"	Set ObjPPC ":objects:game:ppc:final:"		Set VerRezOptions ""	Set SymbolsPPC "-sym off"	Set VersionPPCCOptions "-opt speed,unroll,unswitch {SymbolsPPC} -d GAME -d FINAL"	Set TargPPC "{Application}.ppc"	Set CSeriesLibrariesPPC "¶"{CSeriesLibraries}¶"cseries.xcoff"#options for PowerPC full sprocket versionselse if "{program}" == "{Application}.spr.alpha.ppc" || "{program}" == "{Application}.spr.alpha" || "{program}" == "{Application}.spr.alpha.fat"	Set ObjPPC ":objects:game:ppc:sprocketalpha:"		Set VerRezOptions "-d DEBUG {SprocketSupport}"	Set SymbolsPPC "-sym on"	Set VersionPPCCOptions "-opt off -traceback {SymbolsPPC} -d GAME -d ALPHA -d DEBUG -d COMPILE_TIME=`Date -n` {SprocketSupport}"	Set SprocketLibraries "¶"{CSeriesLibraries}¶"InputSprocketStubLib ¶"{CSeriesLibraries}¶"DrawSprocketDebugLib ¶"{CSeriesLibraries}¶"SoundSprocketDebugLib ¶"{CSeriesLibraries}¶"SoundLib"	Set CSeriesLibrariesPPC "¶"{CSeriesLibraries}¶"cseries.sym.xcoff"else if "{program}" == "{Application}.spr.beta.ppc" || "{program}" == "{Application}.spr.beta" || "{program}" == "{Application}.spr.beta.fat"	Set ObjPPC ":objects:game:ppc:sprocketbeta:"		Set VerRezOptions "{SprocketSupport}"	Set SymbolsPPC "-sym off"	Set VersionPPCCOptions "-opt speed,unroll -traceback {SymbolsPPC} -d GAME -d DEBUG -d BETA -d COMPILE_TIME=`Date -n` {SprocketSupport}"	Set TargPPC "{Application}.spr.beta.ppc"	Set SprocketLibraries "¶"{CSeriesLibraries}¶"InputSprocketStubLib ¶"{CSeriesLibraries}¶"DrawSprocketDebugLib ¶"{CSeriesLibraries}¶"SoundSprocketDebugLib ¶"{CSeriesLibraries}¶"SoundLib"	Set CSeriesLibrariesPPC "¶"{CSeriesLibraries}¶"cseries.debug.xcoff"else if "{program}" == "{Application}.spr.gamma.ppc" || "{program}" == "{Application}.spr.gamma" || "{program}" == "{Application}.spr.gamma.fat"	Set ObjPPC ":objects:game:ppc:sprocketgamma:"		Set VerRezOptions "{SprocketSupport}"	Set SymbolsPPC "-sym off"	Set VersionPPCCOptions "-opt speed,unroll {SymbolsPPC} -d GAME -d DEBUG -d GAMMA -d COMPILE_TIME=`Date -n` {SprocketSupport}"	Set TargPPC "{Application}.spr.gamma.ppc"	Set SprocketLibraries "¶"{CSeriesLibraries}¶"InputSprocketStubLib ¶"{CSeriesLibraries}¶"DrawSprocketDebugLib ¶"{CSeriesLibraries}¶"SoundSprocketDebugLib ¶"{CSeriesLibraries}¶"SoundLib"	Set CSeriesLibrariesPPC "¶"{CSeriesLibraries}¶"cseries.debug.xcoff"else if "{program}" == "{Application}.spr.ppc" || "{program}" == "{Application}.spr" || "{program}" == "{Application}.spr.fat"	Set ObjPPC ":objects:game:ppc:sprocketfinal:"		Set VerRezOptions "{SprocketSupport}"	Set SymbolsPPC "-sym off"	Set VersionPPCCOptions "-opt speed,unroll {SymbolsPPC} -d GAME -d FINAL -d TRILOGY {SprocketSupport}"	Set TargPPC "{Application}.spr.ppc"	Set SprocketLibraries "¶"{CSeriesLibraries}¶"InputSprocketStubLib ¶"{CSeriesLibraries}¶"DrawSprocketDebugLib ¶"{CSeriesLibraries}¶"SoundSprocketDebugLib ¶"{CSeriesLibraries}¶"SoundLib"	Set SprocketPPCFinalLinkOptions "-weakLib InputSprocketLib"	Set CSeriesLibrariesPPC "¶"{CSeriesLibraries}¶"cseries.xcoff"#options for PowerPC demo versionselse if "{program}" == "{Application}.demo.alpha.ppc" || "{program}" == "{Application}.demo.alpha" || "{program}" == "{Application}.demo.alpha.fat"	Set ObjPPC ":objects:demo:ppc:alpha:"		Set VerRezOptions "-d DEBUG -d DEMO"	Set SymbolsPPC "-sym on"	Set VersionPPCCOptions "-opt off {SymbolsPPC} -d ALPHA -d DEMO -d DEBUG -d COMPILE_TIME=`Date -n`"	Set DemoTargPPC "{Application}.demo.alpha.ppc"	Set CSeriesLibrariesPPC "¶"{CSeriesLibraries}¶"cseries.sym.xcoff"else if "{program}" == "{Application}.demo.beta.ppc" || "{program}" == "{Application}.demo.beta" || "{program}" == "{Application}.demo.beta.fat"	Set ObjPPC ":objects:demo:ppc:beta:"		Set VerRezOptions "-d DEBUG"	Set SymbolsPPC "-sym off"	Set VersionPPCCOptions "-opt speed {SymbolsPPC} -d BETA -d DEMO -d DEBUG -d COMPILE_TIME=`Date -n`"	Set DemoTargPPC "{Application}.demo.beta.ppc"	Set CSeriesLibrariesPPC "¶"{CSeriesLibraries}¶"cseries.debug.xcoff"else if "{program}" == "{Application}.demo.ppc" || "{program}" == "{Application}.demo" || "{program}" == "{Application}.demo.fat"	Set ObjPPC ":objects:demo:ppc:final:"		Set VerRezOptions "-d DEMO"	Set SymbolsPPC "-sym off"	Set VersionPPCCOptions "-opt speed {SymbolsPPC} -d FINAL -d DEMO"	Set DemoTargPPC "{Application}.demo.ppc"	Set CSeriesLibrariesPPC "¶"{CSeriesLibraries}¶"cseries.xcoff"#options for PowerPC demo sprocket versionselse if "{program}" == "{Application}.demo.spr.alpha.ppc" || "{program}" == "{Application}.demo.spr.alpha" || "{program}" == "{Application}.demo.spr.alpha.fat"	Set ObjPPC ":objects:demo:ppc:sprocketalpha:"		Set VerRezOptions "-d DEBUG -d DEMO {SprocketSupport}"	Set SymbolsPPC "-sym on"	Set VersionPPCCOptions "-opt off {SymbolsPPC} -d ALPHA -d DEMO -d DEBUG -d COMPILE_TIME=`Date -n` {SprocketSupport}"	Set DemoTargPPC "{Application}.demo.spr.alpha.ppc"	Set SprocketLibraries "¶"{CSeriesLibraries}¶"InputSprocketStubLib ¶"{CSeriesLibraries}¶"DrawSprocketDebugLib ¶"{CSeriesLibraries}¶"SoundSprocketDebugLib ¶"{CSeriesLibraries}¶"SoundLib"	Set CSeriesLibrariesPPC "¶"{CSeriesLibraries}¶"cseries.sym.xcoff"else if "{program}" == "{Application}.demo.spr.beta.ppc" || "{program}" == "{Application}.demo.spr.beta" || "{program}" == "{Application}.demo.spr.beta.fat"	Set ObjPPC ":objects:demo:ppc:sprocketbeta:"		Set VerRezOptions "-d DEBUG {SprocketSupport}"	Set SymbolsPPC "-sym off"	Set VersionPPCCOptions "-opt speed {SymbolsPPC} -d BETA -d DEMO -d DEBUG -d COMPILE_TIME=`Date -n` {SprocketSupport}"	Set DemoTargPPC "{Application}.demo.spr.beta.ppc"	Set SprocketLibraries "¶"{CSeriesLibraries}¶"InputSprocketStubLib ¶"{CSeriesLibraries}¶"DrawSprocketDebugLib ¶"{CSeriesLibraries}¶"SoundSprocketDebugLib ¶"{CSeriesLibraries}¶"SoundLib"	Set CSeriesLibrariesPPC "¶"{CSeriesLibraries}¶"cseries.debug.xcoff"else if "{program}" == "{Application}.demo.spr.ppc" || "{program}" == "{Application}.spr.demo" || "{program}" == "{Application}.demo.spr.fat"	Set ObjPPC ":objects:demo:ppc:sprocketfinal:"		Set VerRezOptions "-d DEMO {SprocketSupport}"	Set SymbolsPPC "-sym off"	Set VersionPPCCOptions "-opt speed {SymbolsPPC} -d FINAL -d DEMO {SprocketSupport}"	Set DemoTargPPC "{Application}.demo.spr.ppc"	Set SprocketLibraries "¶"{CSeriesLibraries}¶"InputSprocketStubLib ¶"{CSeriesLibraries}¶"DrawSprocketDebugLib ¶"{CSeriesLibraries}¶"SoundSprocketDebugLib ¶"{CSeriesLibraries}¶"SoundLib"	Set SprocketPPCFinalLinkOptions "-weakLib InputSprocketLib"	Set CSeriesLibrariesPPC "¶"{CSeriesLibraries}¶"cseries.xcoff"else	#we must be doing a 68k build; set some defaults so Make won't crap looking for PowerPC variables	Set NoPPC 1	Set ObjPPC ":objects:ppc:final:"endif {MakeAILibrary} == 1	set VersionCOptions "{VersionCOptions}"" -d AI_LIBRARY"	set VersionPPCCOptions "{VersionPPCCOptions}"" -d AI_LIBRARY"endif {MakeVulcan} == 1	set VersionCOptions "{VersionCOptions}"" -d VULCAN"	set VersionPPCCOptions "{VersionPPCCOptions}"" -d VULCAN"endif {MakeModelFar} == 1	set VersionCOptions "{VersionCOptions}"" -model far"	set Link68kOptions "{Link68kOptions}"" -model far"end# if we're doing a fat build, set FatTarg or DemoFatTarg appropriately, otherwise leave them# set to something that make will ignore (in this case {Application}.fat and {Application}.demo.fatif "{program}" == "{Application}.fat" || "{program}" == "{Application}.spr.fat" || "{program}" == "{Application}.beta.fat"  || "{program}" == "{Application}.alpha.fat" || "{program}" == "{Application}.gamma.fat"	Set FatTarg "{program}"else	Set FatTarg "{Application}.fat"endif "{program}" == "{Application}.demo.fat" || "{program}" == "{Application}.demo.beta.fat"  || "{program}" == "{Application}.demo.alpha.fat"	Set DemoFatTarg "{program}"else	Set DemoFatTarg "{Application}.demo.fat"end# export everything we just did so Make can see itExport Obj68kExport ObjPPCExport VersionAsmOptionsExport VersionCOptionsExport VersionPPCCOptionsExport Targ68kExport DemoTarg68kExport Link68kOptionsExport TargPPCExport DemoTargPPCExport FatTargExport DemoFatTargExport CSeriesLibraries68kExport CSeriesLibrariesPPCExport SymbolsPPCExport VerRezOptionsExport SprocketLibrariesExport SprocketPPCFinalLinkOptions# from way, way above (ending "if {program}==shapes or {program}==demos")end# Select the makefile.Set makefile `(Files -t TEXT "{program}".make || ¶	Files -t TEXT MakeFile || Echo '""') ³ Dev:Null`	# if we selected "MakeFile" but we didn't get a valid 68k or PPC target then we don't know# what we're doing (or at least the environment variables won't be set up right so even if we# think we know what we're doing make won't have a clue) and we should punt.if {NoPPC} && {No68k} && {makefile} == "MakeFile"	Echo "### {0} - ¶"{program}.make¶" doesn't exist and this buildprogram can't handle ¶"{program}¶"." > Dev:StdErr	Exit 1endIf "{makefile}" == ""	Echo "### {0} - No makefile exists for ¶"{program}¶"." > Dev:StdErr	Exit 1End#	Run Make, then execute its output.Echo "# `Date -t` ----- Build of {program}."Echo "# `Date -t` ----- Analyzing dependencies."Begin	Echo "Set Echo 1"	Make {"Parameters"} -f "{makefile}"End > "{program}".makeoutEcho "# `Date -t` ----- Executing build commands.""{program}".makeoutDelete "{program}".makeoutEcho "# `Date -t` ----- Done."Set type "`files -i -n -x t "{program}" ³ Dev:Null || Set Status 0`"Set CaseSensitive True #filetype check for DA must be case sensitiveIf "{type}" =~ /Å APPL/ OR "{type}" =~ /Å MPST/ 	# application or tool	If {No68k}		Echo -n ¶t; Echo -n "move '{program}' 'hoax:doomsucks' -y"; echo -n " "	else		Echo -n ¶t; Quote -n "{program}"; Echo -n " "	endEnd